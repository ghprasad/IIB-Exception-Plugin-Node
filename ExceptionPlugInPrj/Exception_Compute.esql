

CREATE COMPUTE MODULE Exception_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
				DECLARE messageNumber 	INTEGER;
		DECLARE messageText, messageDetails CHARACTER '';
		
		DECLARE ptrException REFERENCE TO InputExceptionList.*[1];
		WHILE lastmove(ptrException) DO
			IF ptrException.Number IS NOT NULL THEN
				SET messageNumber = ptrException.Number;
				SET messageText = ptrException.Text;
			END IF;
			IF ptrException.Text IS NOT NULL THEN
				SET messageDetails = ptrException.Text;
			END IF;
			MOVE ptrException LASTCHILD;
		END WHILE;
		
		SET Environment.Exception.Code 		= COALESCE(messageNumber,'');
		SET Environment.Exception.Text 		= COALESCE(messageText,'');
		SET Environment.Exception.Details 	= COALESCE(messageDetails,'');
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
